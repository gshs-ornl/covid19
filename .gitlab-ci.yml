#Gitlab CI/CD Pipeline Configuration for the Covid19 repository.

stages:
  - build
  - deploy 

variables:
  DOCKER_HOST: unix:///var/run/docker.sock
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_REGISTRY: camden.ornl.gov
  GITLAB_REGISTRY: code.ornl.gov:4567
 
### BUILD STAGES ###

build:api:
  image: docker:stable
  stage: build
  tags:
    - covid19-runner
  only:
    refs:
      - gitlab-ci
  variables:
    IMAGENAME: api
    DOCKERIMAGENAME: covid19/api
  script: 
    - set -x
    # Moves to working directory where Dockerfile is located.
    - cd api

    ## Use this only if the image exists in the Gitlab Registry
    # Logs into the Gitlab Container Registry assigned to this Gitlab repo.
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $GITLAB_REGISTRY
    # Pulls the image from the Gitlab repo for local caching.
    # - docker pull $CI_REGISTRY_IMAGE/$IMAGENAME:latest || true
    # Builds Docker image using Dockerfile and tags with the image name with a Gitlab commit hash value. Uses pulled cached image to reduce build times.
    - docker build --tag $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA . #--cache-from $CI_REGISTRY_IMAGE:latest
    # Adds a latest tag to our new image so it will push a "latest" and a Commit branch tag.
    - docker image tag $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/$IMAGENAME:latest
    # # Docker push to Gitlab:Commit Hash.
    # - docker push $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA
    # # Docker push to Gitlab:latest
    # - docker push $CI_REGISTRY_IMAGE/$IMAGENAME:latest

    # Logs into camden.ornl.gov using service robot user.
    - docker login -u "$ROBOT_USER" -p "$ROBOT_TOKEN" $DOCKER_REGISTRY
    # Tags the version of the image to a version to push to Camden:latest.
    - docker image tag $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest
    # Docker push to Camden:latest.
    - docker push $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest 
    # Tags the image from Camden:latest to Camden:Commit.
    - docker image tag $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA
    # Docker push to Camden:Commit.
    - docker push $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA


build:base:
  image: docker:stable
  stage: build
  tags:
    - covid19-runner
  only:
    refs:
      - gitlab-ci
  variables:
    IMAGENAME: base
    DOCKERIMAGENAME: covid19/base
  script: 
    - set -x
    # Moves to working directory where Dockerfile is located.
    - cd covidb

    # Logs into camden.ornl.gov using service robot user.
    - docker login -u "$ROBOT_USER" -p "$ROBOT_TOKEN" $DOCKER_REGISTRY
    # Builds Docker image using Dockerfile and tags with the image name with a Gitlab commit hash value.
    - docker build --tag $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA .
    # Adds a latest tag to our new image so it will push a "latest" and a Commit branch tag.
    - docker image tag $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest
    # Docker push to Camden:Commit Hash.
    - docker push $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA
    # Docker push to Camden:latest.
    - docker push $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest 


build:covidb:
  image: docker:stable
  stage: build
  tags:
    - covid19-runner
  only:
    refs:
      - gitlab-ci
  variables:
    #Crunchy Postgres
    IMAGENAME: covidb
    DOCKERIMAGENAME: covid19/covidb
  script: 
    - set -x
    # Moves to working directory where Dockerfile is located.
    - cd covidb

    # Logs into camden.ornl.gov using service robot user.
    - docker login -u "$ROBOT_USER" -p "$ROBOT_TOKEN" $DOCKER_REGISTRY
    # Builds Docker image using Dockerfile and tags with the image name with a Gitlab commit hash value.
    - docker build --tag $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA .
    # Adds a latest tag to our new image so it will push a "latest" and a Commit branch tag.
    - docker image tag $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest
    # Docker push to Camden:Commit Hash.
    - docker push $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA
    # Docker push to Camden:latest.
    - docker push $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest 

build:scraper:
  image: docker:stable
  stage: build
  tags:
    - covid19-runner
  only:
    refs:
      - gitlab-ci
  variables:
    IMAGENAME: scraper
    DOCKERIMAGENAME: covid19/scraper
  script: 
    - set -x
    # Moves to working directory where Dockerfile is located.
    - cd scraper

    ## Use this only if the image exists in the Gitlab Registry
    # Logs into the Gitlab Container Registry assigned to this Gitlab repo.
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $GITLAB_REGISTRY
    # Pulls the image from the Gitlab repo for local caching.
    #- docker pull $CI_REGISTRY_IMAGE/$IMAGENAME:latest || true
    # Builds Docker image using Dockerfile and tags with the image name with a Gitlab commit hash value. Uses pulled cached image to reduce build times.
    - docker build --tag $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA . #--cache-from $CI_REGISTRY_IMAGE:latest
    # Adds a latest tag to our new image so it will push a "latest" and a Commit branch tag.
    - docker image tag $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/$IMAGENAME:latest
    # # Docker push to Gitlab:Commit Hash.
    # - docker push $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA
    # # Docker push to Gitlab:latest
    # - docker push $CI_REGISTRY_IMAGE/$IMAGENAME:latest

    # Logs into camden.ornl.gov using service robot user.
    - docker login -u "$ROBOT_USER" -p "$ROBOT_TOKEN" $DOCKER_REGISTRY
    # Tags the version of the image to a version to push to Camden:latest.
    - docker image tag $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest
    # Docker push to Camden:latest.
    - docker push $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest 
    # Tags the image from Camden:latest to Camden:Commit.
    - docker image tag $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA
    # Docker push to Camden:Commit.
    - docker push $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA

build:tidy:
  image: docker:stable
  stage: build
  tags:
    - covid19-runner
  only:
    refs:
      - gitlab-ci
  variables:
    IMAGENAME: tidy
    DOCKERIMAGENAME: covid19/tidy
  script: 
    - set -x
    # Moves to working directory where Dockerfile is located.
    - cd tidy

    ## Use this only if the image exists in the Gitlab Registry
    # Logs into the Gitlab Container Registry assigned to this Gitlab repo.
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $GITLAB_REGISTRY
    # Pulls the image from the Gitlab repo for local caching.
    #- docker pull $CI_REGISTRY_IMAGE/$IMAGENAME:latest || true
    # Builds Docker image using Dockerfile and tags with the image name with a Gitlab commit hash value. Uses pulled cached image to reduce build times.
    - docker build --tag $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA . #--cache-from $CI_REGISTRY_IMAGE:latest
    # Adds a latest tag to our new image so it will push a "latest" and a Commit branch tag.
    - docker image tag $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/$IMAGENAME:latest
    # # Docker push to Gitlab:Commit Hash.
    # - docker push $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA
    # # Docker push to Gitlab:latest
    # - docker push $CI_REGISTRY_IMAGE/$IMAGENAME:latest

    # Logs into camden.ornl.gov using service robot user.
    - docker login -u "$ROBOT_USER" -p "$ROBOT_TOKEN" $DOCKER_REGISTRY
    # Tags the version of the image to a version to push to Camden:latest.
    - docker image tag $CI_REGISTRY_IMAGE/$IMAGENAME:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest
    # Docker push to Camden:latest.
    - docker push $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest 
    # Tags the image from Camden:latest to Camden:Commit.
    - docker image tag $DOCKER_REGISTRY/$DOCKERIMAGENAME:latest $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA
    # Docker push to Camden:Commit.
    - docker push $DOCKER_REGISTRY/$DOCKERIMAGENAME:$CI_COMMIT_SHORT_SHA


### DEPLOY STAGES###


deploy:develop:
  stage: deploy
  image: centos:7
  tags:
    - covid19-runner
  only:
    refs:
      - gitlab-ci
  
  when: manual

  script:
    - set -x
    - yum install -y yum-utils device-mapper-persistent-data lvm2
    - yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    - yum install -y docker-ce docker-ce-cli containerd.io
    - curl -L "https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - docker login -u $ROBOT_USER -p $ROBOT_TOKEN $DOCKER_REGISTRY
    - docker-compose -f docker-compose.yml down #-f docker-compose-override-cicd.yml
    - docker-compose -f docker-compose.yml -f docker-compose-override-cicd.yml up -d
